// <auto-generated />
using API_Hospitalar.HospitalContextDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClinicVault.Migrations
{
    [DbContext(typeof(HospitalContext))]
    partial class HospitalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API_Hospitalar.Models.Alergias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DescricaoAlergia")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ALERGIA");

                    b.Property<int>("PacienteID")
                        .HasColumnType("int")
                        .HasColumnName("PACIENTE_ID");

                    b.HasKey("Id");

                    b.HasIndex("PacienteID");

                    b.ToTable("ALERGIAS");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DescricaoAlergia = "Látex",
                            PacienteID = 2
                        },
                        new
                        {
                            Id = 2,
                            DescricaoAlergia = "Analgésicos",
                            PacienteID = 3
                        },
                        new
                        {
                            Id = 3,
                            DescricaoAlergia = "Antibióticos",
                            PacienteID = 5
                        },
                        new
                        {
                            Id = 4,
                            DescricaoAlergia = "Glútem",
                            PacienteID = 8
                        },
                        new
                        {
                            Id = 5,
                            DescricaoAlergia = "Poeira, Insetos",
                            PacienteID = 1
                        });
                });

            modelBuilder.Entity("API_Hospitalar.Models.Atendimentos", b =>
                {
                    b.Property<int>("Id_Atendimento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Atendimento"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("DESCRICAO");

                    b.Property<int>("MedicoId")
                        .HasColumnType("int")
                        .HasColumnName("MEDICO_ID");

                    b.Property<int>("PacienteID")
                        .HasColumnType("int")
                        .HasColumnName("PACIENTE_ID");

                    b.HasKey("Id_Atendimento");

                    b.HasIndex("MedicoId");

                    b.HasIndex("PacienteID");

                    b.ToTable("ATENDIMENTOS");
                });

            modelBuilder.Entity("API_Hospitalar.Models.Cuidados", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DescricaoCuidado")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CUIDADO");

                    b.Property<int>("PacienteID")
                        .HasColumnType("int")
                        .HasColumnName("PACIENTE_ID");

                    b.HasKey("Id");

                    b.HasIndex("PacienteID");

                    b.ToTable("CUIDADOS-ESPECIFICOS");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DescricaoCuidado = "pressão alta.",
                            PacienteID = 7
                        },
                        new
                        {
                            Id = 2,
                            DescricaoCuidado = "Perda de memória.",
                            PacienteID = 8
                        },
                        new
                        {
                            Id = 3,
                            DescricaoCuidado = "Diabetes",
                            PacienteID = 3
                        },
                        new
                        {
                            Id = 4,
                            DescricaoCuidado = "Hipertensão",
                            PacienteID = 10
                        });
                });

            modelBuilder.Entity("API_Hospitalar.Models.EnfermeiroModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CPF");

                    b.Property<string>("CadastroCOFEN_UF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CADASTRO-COFEN-UF");

                    b.Property<string>("Data_de_Nascimento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DATA-NASCIMENTO");

                    b.Property<string>("Genero")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("GENERO");

                    b.Property<string>("InstituicaoDeFormacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("INSTITUICAO-DE-FORMACAO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NOME");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TELEFONE");

                    b.HasKey("Id");

                    b.ToTable("ENFERMEIROS");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CPF = "65433256985",
                            CadastroCOFEN_UF = "065423/PR",
                            Data_de_Nascimento = "03/dez/1999",
                            Genero = "F",
                            InstituicaoDeFormacao = "UFPR",
                            Nome = "Janaína Pascoal",
                            Telefone = "4599778635"
                        },
                        new
                        {
                            Id = 2,
                            CPF = "06458799652",
                            CadastroCOFEN_UF = "005423/PR",
                            Data_de_Nascimento = "03/fev/2003",
                            Genero = "F",
                            InstituicaoDeFormacao = "UFPR",
                            Nome = "Zuleide Silva",
                            Telefone = "45998784896"
                        });
                });

            modelBuilder.Entity("API_Hospitalar.Models.MedicoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CPF");

                    b.Property<string>("CRM_UF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CRM-UF");

                    b.Property<string>("Data_de_Nascimento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DATA-NASCIMENTO");

                    b.Property<string>("EspecializacaoClinica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ESPECIALIZACAO-CLINICA");

                    b.Property<string>("EstadoNoSistema")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ESTADO-NO-SISTEMA");

                    b.Property<string>("Genero")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("GENERO");

                    b.Property<string>("InstituicaoDeFormacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("INSTITUICAO-FORMACAO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NOME");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TELEFONE");

                    b.Property<int>("TotalAtendimentos")
                        .HasColumnType("int")
                        .HasColumnName("ATENDIMENTOS");

                    b.HasKey("Id");

                    b.ToTable("MEDICOS");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CPF = "32546879526",
                            CRM_UF = "032654/PR",
                            Data_de_Nascimento = "23/jan/1990",
                            EspecializacaoClinica = "CLINICO_GERAL",
                            EstadoNoSistema = "true",
                            Genero = "F",
                            InstituicaoDeFormacao = "UFPR",
                            Nome = "Amanda Ciqueira Gomés",
                            Telefone = "45998165487",
                            TotalAtendimentos = 0
                        },
                        new
                        {
                            Id = 2,
                            CPF = "03265146588",
                            CRM_UF = "017654/PR",
                            Data_de_Nascimento = "03/dez/1995",
                            EspecializacaoClinica = "CLINICO_GERAL",
                            EstadoNoSistema = "true",
                            Genero = "M",
                            InstituicaoDeFormacao = "UFPR",
                            Nome = "Aldair Plínio Mossolin",
                            Telefone = "45998781256",
                            TotalAtendimentos = 0
                        });
                });

            modelBuilder.Entity("API_Hospitalar.Models.PacienteModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CPF");

                    b.Property<string>("Contato_de_Emergencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CONTATO-EMERGENCIA");

                    b.Property<string>("Convenio")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CONVENIO");

                    b.Property<string>("Data_de_Nascimento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DATA-NASCIMENTO");

                    b.Property<string>("Genero")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("GENERO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NOME");

                    b.Property<string>("Status_De_Atendimento")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("STATUS-ATENDIMENTO");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TELEFONE");

                    b.Property<int>("TotalAtendimentos")
                        .HasColumnType("int")
                        .HasColumnName("TOTAL_DE_ATENDIMENTOS");

                    b.HasKey("Id");

                    b.ToTable("PACIENTES");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CPF = "32451118946",
                            Contato_de_Emergencia = "45998487596",
                            Convenio = "Amil",
                            Data_de_Nascimento = "09/mar/1999",
                            Genero = "M",
                            Nome = "José Alves Siqueira",
                            Status_De_Atendimento = "NAO_ATENDIDO",
                            Telefone = "4532659874",
                            TotalAtendimentos = 0
                        },
                        new
                        {
                            Id = 2,
                            CPF = "33889369944",
                            Contato_de_Emergencia = "45998741523",
                            Convenio = "Unimed",
                            Data_de_Nascimento = "09/abr/1987",
                            Genero = "M",
                            Nome = "Adair José",
                            Status_De_Atendimento = "NAO_ATENDIDO",
                            Telefone = "45998742103",
                            TotalAtendimentos = 0
                        },
                        new
                        {
                            Id = 3,
                            CPF = "82052437940",
                            Contato_de_Emergencia = "45987452163",
                            Convenio = "HB Saude",
                            Data_de_Nascimento = "19/dez/1991",
                            Genero = "M",
                            Nome = "Marcos Anderman",
                            Status_De_Atendimento = "NAO_ATENDIDO",
                            Telefone = "4532569874",
                            TotalAtendimentos = 0
                        },
                        new
                        {
                            Id = 4,
                            CPF = "03254879685",
                            Contato_de_Emergencia = "4532365874",
                            Convenio = "Medi Saude",
                            Data_de_Nascimento = "01/jan/1979",
                            Genero = "F",
                            Nome = "Maria de Fatima",
                            Status_De_Atendimento = "NAO_ATENDIDO",
                            Telefone = "45988771365",
                            TotalAtendimentos = 0
                        },
                        new
                        {
                            Id = 5,
                            CPF = "03256874987",
                            Contato_de_Emergencia = "45998658742",
                            Convenio = "Ameplan",
                            Data_de_Nascimento = "28/jul/1978",
                            Genero = "M",
                            Nome = "José Aldo",
                            Status_De_Atendimento = "NAO_ATENDIDO",
                            Telefone = "45998715236",
                            TotalAtendimentos = 0
                        },
                        new
                        {
                            Id = 6,
                            CPF = "06548756982",
                            Contato_de_Emergencia = "4536230198",
                            Convenio = "Promed",
                            Data_de_Nascimento = "15/nov/1996",
                            Genero = "F",
                            Nome = "Ana Paula Stritzsch",
                            Status_De_Atendimento = "NAO_ATENDIDO",
                            Telefone = "4532263584",
                            TotalAtendimentos = 0
                        },
                        new
                        {
                            Id = 7,
                            CPF = "03215236685",
                            Contato_de_Emergencia = "45998487596",
                            Convenio = "Promed",
                            Data_de_Nascimento = "01/mar/1965",
                            Genero = "F",
                            Nome = "Fátima Andrade Silva",
                            Status_De_Atendimento = "NAO_ATENDIDO",
                            Telefone = "45998748579",
                            TotalAtendimentos = 0
                        },
                        new
                        {
                            Id = 8,
                            CPF = "09658748695",
                            Contato_de_Emergencia = "45998547821",
                            Convenio = "Premium Saude",
                            Data_de_Nascimento = "09/abr/1972",
                            Genero = "M",
                            Nome = "Mário Silva",
                            Status_De_Atendimento = "NAO_ATENDIDO",
                            Telefone = "45998546325",
                            TotalAtendimentos = 0
                        },
                        new
                        {
                            Id = 9,
                            CPF = "03265878965",
                            Contato_de_Emergencia = "45996365247",
                            Convenio = "Amil",
                            Data_de_Nascimento = "28/mar/1996",
                            Genero = "M",
                            Nome = "André Heimn",
                            Status_De_Atendimento = "NAO_ATENDIDO",
                            Telefone = "45996854702",
                            TotalAtendimentos = 0
                        },
                        new
                        {
                            Id = 10,
                            CPF = "06325418759",
                            Contato_de_Emergencia = "45998487596",
                            Convenio = "Samaritano",
                            Data_de_Nascimento = "19/abr/2005",
                            Genero = "F",
                            Nome = "Priscila Boliviar Cácer",
                            Status_De_Atendimento = "NAO_ATENDIDO",
                            Telefone = "4532659874",
                            TotalAtendimentos = 0
                        });
                });

            modelBuilder.Entity("API_Hospitalar.Models.Alergias", b =>
                {
                    b.HasOne("API_Hospitalar.Models.PacienteModel", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("API_Hospitalar.Models.Atendimentos", b =>
                {
                    b.HasOne("API_Hospitalar.Models.MedicoModel", "Medico")
                        .WithMany()
                        .HasForeignKey("MedicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_Hospitalar.Models.PacienteModel", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medico");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("API_Hospitalar.Models.Cuidados", b =>
                {
                    b.HasOne("API_Hospitalar.Models.PacienteModel", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });
#pragma warning restore 612, 618
        }
    }
}
